---
format: pdf
editor: visual
lang: "es"
header-includes:
  - \usepackage{ragged2e}
  - \usepackage{hyperref}
---


\Centering

\vspace{3cm}


\pagenumbering{gobble}

\vspace{5cm}

\large
LICENCIATURA EN ESTADÍSTICA

\vspace{1cm}

\large
\Huge
"Análisis del método Metropolis-Hastings en una y dos dimensiones"
\Huge
\newline
\vspace{0.3cm}

\normalsize
Trabajo Práctico 2
\vspace{1cm}
\begin{center}

\end{center}
\vspace{2cm}
Autores: Tomás Anderson - Alejo Vaschetti - Manuel Moresi

Docentes: Ignacio Evangelista - Tomás Capretto

08/05/2024
\normalsize

\newpage
\hypersetup{linkcolor = black}
\tableofcontents


\newpage
\pagenumbering{arabic}

\RaggedRight
\newpage
```{r, echo = FALSE, message = FALSE, warning = FALSE}
library(tidyverse)
library(ggplot2)
library(rstan)
```
## Prologo

Era una pacifica madrugada de miércoles en Cordoba, cuando suena un telefono en la cercania. Letargico, luego de dejar sonando unos segundos el celular, Guido abre los ojos desganadamente y comprueba quien es la persona que esta irrumpiendo en su sueño. "-¿El capitan?" piensa Guido dudosamente. Al atender el movil se escucha, "-LLego la hora de tu primer trabajo Guido. Preparate que en 10 minutos te pasan a buscar para ir a Salsipuedes." Como si todavia no hubiese entendido que esta pasando, lentamente Guido salio de su lecho para vestirse con su preciado nuevo uniforme de la policía científica de Córdoba, recien cuando el vehiculo llego pudo Guido entender lo que habia pasado. "-¡Por fin! Mi primer trabajo." penso guido alegremente. Pero no estaba preparado para afrontar lo que se iba a encontrar.


# Introducción

Se suele decir que la muerte es certera pero... ¿es precisa? Acompaña a Guido, un estudiante de estadistica, que como parte de su nuevo trabajo tiene que, con la información que posee, estimar a que hora se produjo un asesinato en la ciudad de Salsipuedes.


## Capitulo 1: Entender la metodologia
  
Al llegar, Guido presencio el caos de la escena instantaneamente. Muebles volcados y destrozados. Utensilios de cocina desparramados y manchados. La brisa matutina se abría paso por los vidrios estallados y la débil luz de los móviles policiales dejaban ver que el cuerpo de Sergio Contreras yacía en un charco de sangre hacia un extremo del salón. Sorprendentemente, recordando lo que estudio, salio de su estupor y fue a preguntar los hechos del caso.

## Medicina forense

Uno de los metodos que se utiliza en la medicina forense para poder estimar la hora del fallecimiento, es el estudio de la temperatura corporal. Cuando alguien fallece, la temperatura del cuerpo ira disminuyendo hasta que este llege a un equilibrio termico con la temperatura ambiente. Dicho proceso se lo conoce como *enfriamiento postmortem* o *algor mortis*. Pero el ritmo al que el cuerpo pierde calor no es constante. Dicho cambio, tambien conocido como ecuación diferencial, satisface la siguiente ley:

$$\frac{\mathrm{d}T(t)}{\mathrm{d}t} = r [T_{\text{amb}} - T(t)]$$

donde $T_{amb}$ es la temperatura ambiente, $r$ una constante positiva que indica la rapidez del *algor mortis* y $T(t)$ es la función que describe la temperatura del cuerpo en función del tiempo donde $t=0$ cuando la persona muere.

Una función que satisface la ecuación diferencial es: 

$$T(t) = T_{amb}+(T_i-T_{amb})e^{-rt}$$ 
Donde $T_i$ es la temperatura inicial del cuerpo. Dicha relación se demuestra de la siguiente manera:
$$\frac{dT(t)}{dt} =-r(T_i-T_{amb})e^{-rt}$$
$$\frac{dT(t)}{dt} =-r(T_i-T_{amb})e^{-rt}+rT_{amb}-rT_{amb}$$ 
$$\frac{dT(t)}{dt} =-r(T_{amb}+(T_i-T_{amb})e^{-rt})+rT_{amb}$$ 
$$\frac{dT(t)}{dt} =-rT(t)+rT_{amb}$$ 
$$\frac{dT(t)}{dt} =r(T_{amb}-T(t))$$


Si $T_{amb}=23$ y $T_{ini}=37$ la forma de la función es la siguiente:


```{r, echo = FALSE, message = FALSE, warning = FALSE}
T_fun = function(t_amb, t_i, r, t) t_amb + (t_i - t_amb) * exp(-r * t) 
T_valores_1 = T_fun(23, 37, .1, seq(0,75,1))
T_valores_2 = T_fun(23, 37, .3, seq(0,75,1))
datos_T = data.frame(x = seq(0,75,1), y = c(T_valores_1, T_valores_2), r = rep(c("0.1", "0.3"), each = 76)) 

ggplot(datos_T) + geom_line(aes(x = x, y = y, color = r)) + scale_y_continuous(name = "T(t)") + scale_x_continuous(name = "t")
``` 

  
Para simplificar el problema, no se utiliza la función $T(t)$ sino $ln(T(t)-T_{amb})$ ya que esta tiene forma lineal.
$$
\begin{array}{lrrr}
 T(t)-T_{amb} = T_{diff}e^{-rt} & Donde: & T_{diff} = T_i-T_{amb}
\end{array}
$$


$$Y(t)=ln(T(t)-T_{amb}) = ln(T_{diff}e^{-rt}) = ln(T_{diff})+ln(e^{-rt}) = ln(T_{diff})-rt$$

Dicha función esta representada por la ecuacción de una recta $y=\beta_0+\beta_1*x$
donde $\beta_0$ es el logaritmo natural de la diferencia de temperatura del cuerpo inicial y de la ambiente. $\beta_1$ representa la velocidad de cambio de $Y(t)$.


```{r, echo = FALSE}
ln_T_valores_1 = log(T_valores_1-23)
ln_T_valores_2 = log(T_valores_2-23)
datos_ln_T = data.frame(x = seq(0,75,1), y = c(ln_T_valores_1, ln_T_valores_2), r = rep(c("0.1", "0.3"), each = 76)) 

ggplot(datos_ln_T) + geom_line(aes(x = x, y = y, color = r))
```


# Capitulo 2: Ademas de que esta muerto, ¿Que sabemos?

Luego de que Martina, una policia que estaba en la escena del crimen, le informe a Guido que a las 5:33 am recibieron una llamada de una vecina sobre ruidos extraños, el joven estadistico le pregunta "-¿Y a que hora llegaron?". "-Llegamos a las 5:52 y en 8 minutos concluimos la inspección de la casa. En este mismo estado la encontramos.". Sin poder continuar la conversación, el médico del equipo llama a Guido y le cuenta que la temperatura del cuerpo de Sergio es de 32.8 ºC. "-¿Necesitas alguna información mas Guido?". Sin mirarle a los ojos, Guido saca su celular, busca la temperatura ambiente actual y dice expectante "-No te preocupes doc, ya tengo todo lo que necesito". Pero Guido, ¿tiene todo lo que necesita? 

## Distribuciones a *priori*

Fundamentalmente, la temperatura del cuerpo de Sergio a traves del tiempo luego de fallecer depende de 4 aspectos:

-   La temperatura del cuerpo al momento de morir (ºC).
-   La temperatura ambiente (ºC).
-   La velocidad en la que la temperatura del cuerpo cae.
-   A que hora fallecio.

Ademas, hay que tener en cuenta el error de medición que pueda tener el equipo que se use para medir la temperatura.

Pero se requiere que lo que se modele sea una recta, por lo que se trabaja con el logaritmo natural de la diferencia de temperatura del cuerpo y la temperatura del ambiente.

Esto se explicita en el siguiente modelo

$$Y_i|\mu_i,\sigma \sim Normal(\mu_i,\sigma)$$
Donde: $Y_i = ln(T(t_i)-T_{amb})$, $\mu_i = \beta_0 + \beta_1  t_i$ y $t_i$ es el i-esimo tiempo en horas que paso desde que Sergio murió.

Se conoce la temperatura ambiente, siendo $T_{amb}=22$ºC. Los valores exactos de los demas parametros se desconocen pero se tiene cierta información sobre ellos.


## $\boldsymbol{\beta_0}$: Logaritmo natural de la diferencia entre la temperatura inicial del cuerpo y la ambiente

Se sabe que la temperatura del cuerpo de una persona sana varia entre 36 y 37.5 ºC, por lo que $\beta_0 = ln(T_{diff})$ tiene que estar entre $ln(36)=$ `r round(log(36-22),3)` y $ln(37.5)=$ `r round(log(37.5-22),3)`. Una distribución que representa lo requerido es:

```{r, echo = FALSE}
beta0_sigma = (log(37.5-22)-log(36-22))/6
beta0_mu = log(36.75-22)
```

$$\beta_0 \sim Normal(2.69,0.017)$$

```{r, echo = FALSE}
seq_beta0 = seq(log(36-22),log(37.5-22),length.out = 1000)
df_beta0 = data.frame(y = dnorm(seq_beta0, 2.69, 0.017), x = seq_beta0)
ggplot(df_beta0) + geom_line(aes(x = x, y = y)) + scale_x_continuous(name = "Beta0", breaks = round(seq(log(36-22),log(37.5-22),length.out = 7),3)) + scale_y_continuous(name = "Densidad")

norm_t = data.frame(x = exp(rnorm(100000, 2.69, 0.017))+22)
ggplot(norm_t)+ geom_density(aes(x = x, y = after_stat(density)), color = "red", size = 1)
```


## $\boldsymbol{\beta_1}$: Velocidad en la que la temperatura del cuerpo cae

La velocidad a la que decrece la temperatura de los cuerpos humanos cuando mueren es un tema ya estudiado en la medicina forense. 

"Greggio y Valtorta(1998) han demostrado que el descenso de la temperatura corporal post-mortem se realiza mediante un *plateau* inicial de una 3-4 horas de duración, con una caída promedio de 0.5º C por hora, un decrecimiento lineal que sobrepasa las 12 hs de la muerte con un pérdida promedio de 1º C cada hora y luego un *plateau* final, con descenso lento, de 0,5º o 0,25º por hora hasta igualar a la temperatura ambiente." Fraraccio, J(2021). *Medicina forense contemporanea*. Dosyuna ediciones argentinas.


```{r, echo = FALSE}
r_seq = seq(0.1,0.4,.001)
t_ini = seq(36, 37.5, 0.1)
T_r = numeric()
T_r_label = numeric()
contador = 0
for (i in r_seq) {
  for (j in t_ini) {
    contador = contador + 1
    T_r_label[contador] = i
    T_r[contador] = T_fun(22, j, i, 22)
  }
}
r_li = unique(T_r_label[which(T_r > 22.02 & T_r <= 22.2)])[1]
r_ls = unique(T_r_label[which(T_r > 22.02 & T_r <= 22.2)])[109]

r_mu = -(r_ls+r_li)/2

r_sigma = (r_ls-r_li)/6
```


Basandose en este extracto, se tarda aproximadamente 22 horas en que un cuerpo llege a una temperatura abiente de 22 ºC, por lo que se calcula el valor de $T(t)$ en $t=22$ para varios valores de $\beta_1=-r$ y temperaturas iniciales del cuerpo. Los $\beta_1$ que se acercan a 22 ºC a las 22 horas estan entre `r r_li` y `r r_ls`.

Entonces se llega a que: 

$$\beta_1 \sim Normal(-0.248,0.018)$$
```{r, echo = FALSE}
seq_beta1 = seq(-0.19,-0.31,length.out = 1000)
df_beta1 = data.frame(y = dnorm(seq_beta1, r_mu, r_sigma), x = seq_beta1)
ggplot(df_beta1) + geom_line(aes(x = x, y = y)) + scale_x_continuous(name = "Beta1", breaks = round(seq(r_mu-3*r_sigma,r_mu+3*r_sigma,length.out = 7),3))  + scale_y_continuous(name = "Densidad")
```


## $\boldsymbol{h_m}$: Horario de la muerte

Como $t_i$ depende de cuando Sergio murió, y no se tiene dicha información, se le debe asignar una distribución a *priori*. Entonces se puede separar $t_i$ en $t_i = h_i-h_m$.

Donde $h_m$ es la hora en que se murió Sergio y $h_i$ es la hora de la i-esima observación.

Como hubo ruidos extraños a las 5:33 tiene sentido pensar que la muerte pudo haber ocurrido cerca de esa hora, y ademas no pudo haber ocurrido luego de las 5:52 ya que la policia lo hubiera notado. Entonces se plantea la siguiente distribución a *priori*:


$$h_m \sim (-1)*Gama(5,0.1)+5.883$$
```{r, echo = FALSE}
seq_h_m = seq(0,1.5,length.out = 1000)
df_h_m = data.frame(y = dgamma(seq_h_m, shape = 5, scale = 0.1), x = -1 * seq_h_m + 5.883)
ggplot(df_h_m) + geom_line(aes(x = x, y = y)) + scale_x_continuous(name = "Hora de la muerte", breaks = round(seq(4,5.883,length.out = 7),3))  + scale_y_continuous(name = "Densidad")
```



## $\boldsymbol{\sigma}$: Error de medición


Al investigar sobre el error de medición para la temperatura, se encuentra que el error maximo de un termometro es de 0.7 ºC entonces se calcula la diferencia entre el logaritmo natural de una temperatura $T$ y la temperatura con su error maximo:
$$ln(T+0.7)-ln(T) = ln(\frac{T+0.7}{T}) = ln(1+\frac{0.7}{T})$$
Y esta expresion sera maxima cuando T sea minimo, es decir, $T=22$. Entonces,
```{r, echo = FALSE}
sigma_max = log(1+0.7/22)
```

$$ln(1+\frac{0.7}{22}) \approx 0.03 $$
Por lo tanto,  el *prior* resultante es:

$$\sigma \sim Normal_+(0,0.01)$$ 


```{r, echo = FALSE}
seq_sigma = seq(-0.033,0.033,length.out = 1000)
df_sigma = data.frame(y = 2*abs(dnorm(seq_sigma, 0, 0.01)), x = abs(seq_sigma))
ggplot(df_sigma) + geom_line(aes(x = x, y = y)) + scale_x_continuous(name = "Sigma", breaks = round(seq(0,sigma_max,length.out = 4),3))  + scale_y_continuous(name = "Densidad")


```












```



  
  